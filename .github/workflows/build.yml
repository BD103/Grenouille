name: Build Binaries

on:
  push:
    branches:
      - main
      # TODO: Delete this
      - build-ci

  workflow_dispatch:

env:
  name: grenouille
  rust-toolchain: nightly

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            platform: linux

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.rust-toolchain }}
          target: ${{ matrix.target }}

      - name: Install Libraries
        if: ${{ matrix.platform == 'linux' }}
        run: |
          sudo apt-get update
          sudo apt-get install pkg-config libx11-dev libasound2-dev libudev-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev

      - name: Build Project
        run: cargo build --release --target ${{ matrix.target }}

      - name: Bundle Project
        if: ${{ matrix.platform == 'linux' }}
        run: |
          mkdir -p platform/${{ matrix.platform }}
          cp target/${{ matrix.target }}/release/${{ env.name }} platform/${{ matrix.platform }}
          cp -r assets platform/${{ matrix.platform }}/assets

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.name }}-${{ matrix.target }}
          path: platform/${{ matrix.platform }}
